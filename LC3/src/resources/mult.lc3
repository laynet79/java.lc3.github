;;-----------------------------------------------------------
;;	This program demonstrates multiplication
;;-----------------------------------------------------------
		.ORIG	#0
BEGIN	LD		R1, ARG1	; place arguments into R1 and R2
		LD		R2, ARG2
		JSR		MULT		; perform multiplication
		ST		R0, RESULT	; save result
		HALT
		
;;------------- integer multiplication ----------------------
;; INPUT: 	R1 - arg1
;;			R2 - arg2
;; OUTPUT:	R0 - product
MULT	AND		R0, R0, #0	; zero result register
		AND		R3, R3, #0  ; R3 will keep track of the result sign
		ADD		R2, R2, #0	; make R2 (arg2) be positive
		BRzp	MULTLP		; branch to loop if not negative
		ADD		R3, R3, #1	; negative so save sign bit and negate
		NOT		R2, R2
		ADD		R2, R2, #1
MULTLP	BRz		MULTSN		; perform multiplication by multiple adds (loop)
		ADD		R0, R0, R1
		ADD		R2, R2, #-1
		BR		MULTLP
MULTSN	ADD		R3, R3, #0	; fix the sign of the result if necessary
		BRz		MULTEND
		NOT		R0, R0
		ADD		R0, R0, #1
MULTEND	RET					; return result in R0

;;------------------- variables -----------------------------
ARG1	.FILL	#3
ARG2	.FILL	#-4
RESULT	.FILL	#0
;;-----------------------------------------------------------
		.END
